SELECT *
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3,4

--SELECT *
--FROM PortfolioProject..CovidVaccinations
--ORDER BY 3,4

--Exploring data 
SELECT 
    [location]
    ,date
    ,total_cases
    ,new_cases
    ,total_deaths 
    ,population
FROM PortfolioProject..CovidDeaths
ORDER BY 1,2

--Looking at Total Cases vs Total Deaths 
--Shows likelihood of dying if you contract Covid 
SELECT 
    [location], date, total_cases, total_deaths, (total_deaths *1.0/total_cases)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE [location] LIKE '%states%'
ORDER BY 1,2

--Looking at Total Cases vs Population
--Shows what percentage of the Population got Covid 
SELECT 
    [location], date, population, total_cases, (total_cases *1.0/population)*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE [location] LIKE '%states%'
ORDER BY 1,2

--Looking at Countries with Highest Infection Rates compared to Population
SELECT 
    [location], population, MAX(total_cases) AS HighestInfectionCount, MAX((total_cases *1.00/population))*100 
    AS PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC

--Showing the Countries with the Highest Death Count per Population
SELECT 
    [location], MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY [location]
ORDER BY TotalDeathCount DESC

--LET'S BREAK THIS DOWN BY CONTINENT!

SELECT 
    [continent], MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY [continent]
ORDER BY TotalDeathCount DESC

--This is showing the Continent with the Highest Death Count 
SELECT 
    [continent], MAX(total_deaths) AS TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY [continent]
ORDER BY TotalDeathCount DESC

--GLOBAL NUMBERS
SELECT 
    Date, SUM(new_cases) AS TotalCases, SUM(new_deaths) AS TotalDeaths, (SUM(new_deaths) *1.0/SUM(new_cases))*100 AS DeathPercentage
FROM PortfolioProject..CovidDeaths
--WHERE [location] LIKE '%states%'
WHERE continent IS NOT NULL
GROUP BY [date]
ORDER BY 1,2

--JOINING TABLES TOGETHER
-- Total Population vs Vaccination

SELECT dea.continent, dea.[location], dea.[date], dea.population,vac.new_vaccinations
, SUM(CONVERT(int, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.[date]) AS RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.[location] = vac.location 
    AND dea.[date] = vac.date
    WHERE dea.continent IS NOT NULL
ORDER BY 2,3


--Use CTE 

WITH PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS 
(
SELECT dea.continent, dea.[location], dea.[date], dea.population,vac.new_vaccinations
, SUM(CONVERT(int, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.[date]) AS RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.[location] = vac.location 
    AND dea.[date] = vac.date
    WHERE dea.continent IS NOT NULL
--ORDER BY 2,3 
)

SELECT *, (RollingPeopleVaccinated*1.0/population) *100
FROM PopvsVac


--TEMP TABLE    

 CREATE TABLE #PercentPopulationVaccinated
 (
     Continent NVARCHAR (255),
     Location NVARCHAR (255),
     Date DATETIME,
     Population NUMERIC,
     New_Vaccinations NUMERIC,
     RollingPeopleVaccinated NUMERIC
 )

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.[location], dea.[date], dea.population,vac.new_vaccinations
, SUM(CONVERT(int, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.[date]) AS RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.[location] = vac.location 
    AND dea.[date] = vac.date
    WHERE dea.continent IS NOT NULL
--ORDER BY 2,3 

SELECT *, (RollingPeopleVaccinated*1.0/population) *100
FROM #PercentPopulationVaccinated

--Creating a View to store data for later visualizations 

CREATE VIEW PercentPopulationVaccinated AS 
SELECT dea.continent, dea.[location], dea.[date], dea.population,vac.new_vaccinations
, SUM(CONVERT(int, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.[date]) AS RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac
    ON dea.[location] = vac.location 
    AND dea.[date] = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2,3 

SELECT * 
FROM PercentPopulationVaccinated


